{"map":"{\"version\":3,\"sources\":[\"F:/233JS/Lab 3 - meme creator/src\\\\js\\\\memes.js\"],\"names\":[\"__webpack_require__\",\"console\",\"log\",\"MeMe\",\"_classCallCheck\",\"this\",\"canvas\",\"window\",\"document\",\"getElementById\",\"ctx\",\"getContext\",\"createCanvas\",\"style\",\"width\",\"innerWidth\",\"height\",\"innerHeight\",\"addEventListener\"],\"mappings\":\"6SAEAA,EAAA,IADAC,QAAQC,IAAI,qBAGNC,aACL,SAAAA,iGAAaC,CAAAC,KAAAF,GAEZE,KAAKC,OAASC,OAAOC,SAASC,eAAe,UAC7CJ,KAAKK,IAAML,KAAKC,OAAOK,WAAW,MAGlCN,KAAKO,gEAKJP,KAAKC,OAAOO,MAAMC,MAAQP,OAAOQ,WAAW,EAC5CV,KAAKC,OAAOO,MAAMG,OAAUT,OAAOU,YAAY,iDAoClDV,OAAOW,iBAAiB,OAAS,WACtB,IAAIf\",\"sourcesContent\":[\"// inside memes.js file\\r\\nconsole.log('Memes JS file');\\r\\nimport './general';\\r\\n\\r\\nclass MeMe {\\r\\n\\tconstructor(){\\r\\n\\t\\t//use $ prefix for DOM elements\\r\\n\\t\\tthis.canvas = window.document.getElementById(\\\"canvas\\\");\\r\\n\\t\\tthis.ctx = this.canvas.getContext('2d');\\r\\n\\r\\n\\t\\t/* Create Canvas Element */\\r\\n\\t\\tthis.createCanvas();\\r\\n\\t}\\r\\n\\t\\r\\n\\tcreateCanvas(){\\r\\n\\t\\t\\t// set initial height and width of canvas\\r\\n\\t\\t\\tthis.canvas.style.width = window.innerWidth/3;\\r\\n\\t\\t\\tthis.canvas.style.height =  window.innerHeight/3;\\r\\n\\t\\t\\t\\r\\n\\t}\\r\\n\\tcreateMeme(){\\r\\n\\t\\t/*\\r\\n\\t\\t• What method do we use to draw an image on the context?\\r\\n\\t\\t\\thttps://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Using_images\\r\\n\\r\\n\\t\\t\\tar img1 = new Image(); // HTML5 Constructor\\r\\n\\t\\t\\timg1.src = 'image1.png';\\r\\n\\t\\t\\timg1.alt = 'alt';\\r\\n\\t\\t\\tdocument.body.appendChild(img1);\\r\\n\\r\\n\\t\\t• What method do we need to draw text on the context?\\r\\n\\t\\t\\t\\thttps://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Drawing_text\\r\\n\\r\\n\\t\\t\\t\\tfillText(text, x, y [, maxWidth])\\r\\n\\t\\t\\t\\tFills a given text at the given (x,y) position. Optionally with a maximum width to draw.\\r\\n\\t\\t• What method do we need to outline text on the context?\\r\\n\\t\\tfunction draw() {\\r\\n\\t\\t\\t  var ctx = document.getElementById('canvas').getContext('2d');\\r\\n\\t\\t\\t  ctx.font = '48px serif';\\r\\n\\t\\t\\t  ctx.strokeText('Hello world', 10, 50);\\r\\n\\t\\t\\t}\\r\\n\\t\\t• What property do we use to change the font?\\r\\n\\t\\t\\t\\tabove\\r\\n\\t\\t• What property do we use to change the font color?\\r\\n\\t\\t\\t\\tctx.fillStyle = 'orange';\\r\\n\\t\\t• What property to we use to change the outline color for the font?\\r\\n\\t\\t\\t\\tctx.strokeStyle = color\\r\\n\\t\\t• Let’s see if we can write the code …\\r\\n\\t\\t*/\\r\\n\\r\\n\\t}\\r\\n}\\r\\nlet meMe;\\r\\nwindow.addEventListener(\\\"load\\\",  () => {\\r\\n    meMe = new MeMe();\\r\\n});\"]}","code":"webpackHotUpdate(1,{42:function(n,e,t){\"use strict\";var a=function(){function n(n,e){for(var t=0;t<e.length;t++){var a=e[t];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(e,t,a){return t&&n(e.prototype,t),a&&n(e,a),e}}();t(31),console.log(\"Memes JS file\");var i=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,n),this.canvas=window.document.getElementById(\"canvas\"),this.ctx=this.canvas.getContext(\"2d\"),this.createCanvas()}return a(n,[{key:\"createCanvas\",value:function(){this.canvas.style.width=window.innerWidth/3,this.canvas.style.height=window.innerHeight/3}},{key:\"createMeme\",value:function(){}}]),n}();window.addEventListener(\"load\",function(){new i})}});","extractedComments":[]}